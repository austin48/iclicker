<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2003 i>clicker (R) <http://www.iclicker.com/dnn/>

    This file is part of Sakai iclicker project base pom.

    Sakai iclicker project base pom is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Sakai iclicker project base pom is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Sakai iclicker project base pom.  If not, see <http://www.gnu.org/licenses/>.

-->
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" 
	"http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

    <!-- read in the hibernate.properties file properties -->
    <bean id="testPropertiesConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:/hibernate.properties</value>
            </list>
        </property>
    </bean>

    <!-- create a data source (use the name Sakai uses) -->
    <bean id="javax.sql.DataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName">
            <value>${hibernate.connection.driver_class}</value>
        </property>
        <property name="url">
            <value>${hibernate.connection.url}</value>
        </property>
        <property name="username">
            <value>${hibernate.connection.username}</value>
        </property>
        <property name="password">
            <value>${hibernate.connection.password}</value>
        </property>
    </bean>

    <!-- create a SessionFactory bean from the data source and point it at our HBMs,
        name it the same as the live one so we can reuse our other spring files -->
    <bean id="org.sakaiproject.iclicker.hibernate.SessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="javax.sql.DataSource" />
        <!-- property name="mappingResources" ref="org.sakaiproject.iclicker.HBMMappingList" / -->
        <property name="mappingResources">
            <list>
                <value>org/sakaiproject/iclicker/dao/hbm/ClickerRegistration.hbm.xml</value>
                <value>org/sakaiproject/iclicker/dao/hbm/ClickerLock.hbm.xml</value>
                <value>org/sakaiproject/iclicker/dao/hbm/ClickerUserKey.hbm.xml</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
                <prop key="hibernate.query.substitutions">true 1, false 0</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
            </props>
        </property>
    </bean>

    <!-- Create a transaction manager from the SessionFactory,
        name it the same as the Sakai one so we can reuse our other spring config files -->
    <bean id="org.sakaiproject.iclicker.hibernate.TransactionManager"
        class="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager">
        <property name="sessionFactory"
            ref="org.sakaiproject.iclicker.hibernate.SessionFactory" />
    </bean>

    <!-- Create a test data preload bean -->
    <bean id="org.sakaiproject.iclicker.impl.logic.test.FakeDataPreload"
        class="org.sakaiproject.iclicker.impl.logic.FakeDataPreload"
        init-method="init">
        <property name="dao" ref="org.sakaiproject.iclicker.api.dao.IClickerDao" />
    </bean>

</beans>